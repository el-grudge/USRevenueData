ggplot(filter(df, Gov == "FED"), aes(x = Time, y = "Total Tax")) + geom_line() #1
df <- subset(revusa, select = -c(TIME_FORMAT))
df <- filter(df, TAX %in% c("TOTALTAX", "1000", "2000", "3000", "4000", "5000", "6000"))
df <- spread(df, TAX, obsValue)
df %>% head()
col_idx <- grep("TOTALTAX", colnames(df))
df %>% head()
df <- df[, c((1:2), col_idx, (4:ncol(df)-1))]
df %>% head()
df$obsTime <- year(as.Date(df$obsTime, "%Y"))
df %>% head()
df$TOTALTAX <- as.integer(df$TOTALTAX)
df %>% head()
df$"1000" <- as.integer(df$"1000")
df$"2000" <- as.integer(df$"2000")
df$"3000" <- as.integer(df$"3000")
df$"4000" <- as.integer(df$"4000")
df$"5000" <- as.integer(df$"5000")
df$"6000" <- as.integer(df$"6000")
df %>% head()
colnames(df) <- c("Gov", "Time", "Total Tax", "Corporate Income Tax", "Social Security Tax", "Payroll Tax", "Property Tax", "Taxes on Service and Goods","Other Taxes");
df %>% head()
ggplot(filter(df, Gov == "FED"), aes(x = "Time", y = "Total Tax")) + geom_line() #1
ggplot(filter(df, Gov == "FED"), aes(x = Time, y = "Total Tax")) + geom_line() #1
ggplot(filter(df, Gov == "FED"), aes(x = Time, y = "Total Tax")) + geom_line() #1
ggplot(filter(df, Gov == "FED"), aes(x = Time, y = Total Tax)) + geom_line() #1
ggplot(filter(df, Gov == "FED"), aes(x = Time, y = Total Tax)) + geom_line() #1
colnames(df) <- c("Gov", "Time", "TotalTax", "Corporate Income Tax", "Social Security Tax", "Payroll Tax", "Property Tax", "Taxes on Service and Goods","Other Taxes");
ggplot(filter(df, Gov == "FED"), aes(x = Time, y = TotalTax)) + geom_line() #1
colnames(df) <- c("Gov", "Time", "TotalTax", "CorporateIncomeTax", "SocialSecurityTax", "PayrollTax", "PropertyTax", "TaxesServiceGoods","OtherTaxes");
ggplot(filter(df, Gov == "FED"), aes(x = Time, y = TotalTax)) + geom_line() #1
ggplot(filter(df, Gov == "FED")) + geom_line(aes(x = Time, y = TotalTax))
ggplot(filter(df, Gov == "FED")) + geom_line(aes(x = Time, y = TotalTax)) + geom_line(aes(x = Time, y = CorporateIncomeTax))
ggplot(filter(df, Gov == "FED")) + geom_line(aes(x = Time, y = TotalTax)) + geom_line(aes(x = Time, y = c(CorporateIncomeTax, SocialSecurityTax)))
ggplot(filter(df, Gov == "FED")) + geom_line(aes(x = Time, y = c(TotalTax, CorporateIncomeTax)))
ggplot(filter(df, Gov == "FED")) +
geom_line(aes(x = Time, y = CorporateIncomeTax)) +
geom_line(aes(x = Time, y = SocialSecurityTax))
geom_line(aes(x = Time, y = PayrollTax)) +
geom_line(aes(x = Time, y = PropertyTax)) +
geom_line(aes(x = Time, y = TaxesServiceGoods)) +
geom_line(aes(x = Time, y = OtherTaxes))
ggplot(filter(df, Gov == "FED")) +
geom_line(aes(x = Time, y = CorporateIncomeTax)) +
geom_line(aes(x = Time, y = SocialSecurityTax)) +
geom_line(aes(x = Time, y = PayrollTax)) +
geom_line(aes(x = Time, y = PropertyTax)) +
geom_line(aes(x = Time, y = TaxesServiceGoods)) +
geom_line(aes(x = Time, y = OtherTaxes))
ggplot(filter(df, Gov == "FED")) +
geom_line(aes(x = Time, y = CorporateIncomeTax, color = "green")) +
geom_line(aes(x = Time, y = SocialSecurityTax)) +
geom_line(aes(x = Time, y = PayrollTax)) +
geom_line(aes(x = Time, y = PropertyTax)) +
geom_line(aes(x = Time, y = TaxesServiceGoods)) +
geom_line(aes(x = Time, y = OtherTaxes))
ggplot(filter(df, Gov == "FED")) +
geom_line(aes(x = Time, y = CorporateIncomeTax, color = "green"))
ggplot(filter(df, Gov == "FED")) +
geom_line(aes(x = Time, y = CorporateIncomeTax, color = "Green"))
ggplot(filter(df, Gov == "FED")) +
geom_line(aes(x = Time, y = CorporateIncomeTax, colour = "Green"))
ggplot(filter(df, Gov == "FED")) +
geom_line(aes(x = Time, y = CorporateIncomeTax, colour = Green))
ggplot(filter(df, Gov == "FED")) +
geom_line(aes(x = Time, y = CorporateIncomeTax, colour = "Green"))
ggplot(filter(df, Gov == "FED")) +
geom_line(aes(x = Time, y = CorporateIncomeTax, colour = "Green"))
ggplot(filter(df, Gov == "FED")) +
geom_line(aes(x = Time, y = CorporateIncomeTax, colour = "Green"))
geom_line(aes(x = Time, y = SocialSecurityTax))
ggplot(filter(df, Gov == "FED")) +
geom_line(aes(x = Time, y = CorporateIncomeTax, colour = "Green")) +
geom_line(aes(x = Time, y = SocialSecurityTax, color = "Red"))
ggplot(filter(df, Gov == "FED")) +
geom_line(aes(x = Time, y = CorporateIncomeTax, colour = "Green")) +
geom_line(aes(x = Time, y = SocialSecurityTax, color = "Orange")) + geom_line(aes(x = Time, y = PayrollTax, color = "Purple"))
ggplot(filter(df, Gov == "FED")) +
geom_line(aes(x = Time, y = CorporateIncomeTax, colour = "Green")) +
geom_line(aes(x = Time, y = SocialSecurityTax, color = "Orange")) + geom_line(aes(x = Time, y = PayrollTax, color = "Purple")) +
geom_line(aes(x = Time, y = PropertyTax, color = "Pink")) +
geom_line(aes(x = Time, y = TaxesServiceGoods, color = "Olive")) +
geom_line(aes(x = Time, y = OtherTaxes, color = "Gold"))
ggplot(filter(df, Gov == "FED"), aes(x = Time, y = TotalTax)) + geom_line() + facet_grid(vars(Gov))
ggplot(df, aes(x = Time, y = TotalTax)) + geom_line() + facet_grid(vars(Gov))
df$Gov %>% unique()
ggplot(df) + geom_line(aes(x = Time, y = CorporateIncomeTax, colour = "Green")) + geom_line(aes(x = Time, y = SocialSecurityTax, color = "Orange")) + geom_line(aes(x = Time, y = PayrollTax, color = "Purple")) + geom_line(aes(x = Time, y = PropertyTax, color = "Pink")) + geom_line(aes(x = Time, y = TaxesServiceGoods, color = "Olive")) + geom_line(aes(x = Time, y = OtherTaxes, color = "Gold")) + facet_grid(vars(Gov))
ggplot(filter(df, Gov == "FED")) + geom_line(aes(x = Time, y = CorporateIncomeTax, colour = "Green")) + geom_line(aes(x = Time, y = SocialSecurityTax, color = "Orange")) + geom_line(aes(x = Time, y = PayrollTax, color = "Purple")) + geom_line(aes(x = Time, y = PropertyTax, color = "Pink")) + geom_line(aes(x = Time, y = TaxesServiceGoods, color = "Olive")) + geom_line(aes(x = Time, y = OtherTaxes, color = "Gold"))
ggplot(df) + geom_line(aes(x = Time, y = CorporateIncomeTax, colour = "Green")) + geom_line(aes(x = Time, y = SocialSecurityTax, color = "Orange")) + geom_line(aes(x = Time, y = PayrollTax, color = "Purple")) + geom_line(aes(x = Time, y = PropertyTax, color = "Pink")) + geom_line(aes(x = Time, y = TaxesServiceGoods, color = "Olive")) + geom_line(aes(x = Time, y = OtherTaxes, color = "Gold")) + facet_grid(vars(Gov))
ggplot(filter(df, Gov == "FED")) + geom_line(aes(x = Time, y = CorporateIncomeTax, colour = "Green")) + geom_line(aes(x = Time, y = SocialSecurityTax, color = "Orange")) + geom_line(aes(x = Time, y = PayrollTax, color = "Purple")) + geom_line(aes(x = Time, y = PropertyTax, color = "Pink")) + geom_line(aes(x = Time, y = TaxesServiceGoods, color = "Olive")) + geom_line(aes(x = Time, y = OtherTaxes, color = "Gold"))
ggplot(filter(df, Gov == "FED"),) + geom_area(aes(x = Time, y = CorporateIncomeTax, colour = "Green"), position = "fill") + geom_area(aes(x = Time, y = SocialSecurityTax, color = "Orange"), position = "fill") + geom_area(aes(x = Time, y = PayrollTax, color = "Purple"), position = "fill") + geom_area(aes(x = Time, y = PropertyTax, color = "Pink"), position = "fill") + geom_area(aes(x = Time, y = TaxesServiceGoods, color = "Olive"), position = "fill") + geom_area(aes(x = Time, y = OtherTaxes, color = "Gold"))
df
ASSIGNMENT_3 <- read.table("~/R/Projects/CAP6737_INTERACTIVE_DATA_VIZ/ASSIGNMENT_3/ASSIGNMENT_3.Rproj", quote="\"")
View(ASSIGNMENT_3)
View(ASSIGNMENT_3)
revusa
df <- subset(revusa, select = -c(TIME_FORMAT))
View(df)
revusa <- data.frame(revusa)
df <- subset(revusa, select = -c(TIME_FORMAT))
View(df)
df$obsTime <- year(as.Date(df$obsTime, "%Y"))
install.packages("tidyverse")
install.packages("OECD")
install.packages("lubridate")
library(tidyverse)
library(OECD)
library(lubridate)
df$obsTime <- year(as.Date(df$obsTime, "%Y"))
df <- filter(df, TAX %in% c("TOTALTAX", "1000", "2000", "3000", "4000", "5000", "6000"))
df$obsTime <- year(as.Date(df$obsTime, "%Y"))
df$obsValue <- as.integer(df$obsValue)
ggplot(filter(filter(df, TAX == "TOTALTAX"), GOV == "FED"), aes(x = obsTime)) + geom_line(aes(y = obsValue))
ggplot(filter(filter(df, TAX == "1000"), GOV == "FED"), aes(x = obsTime)) + geom_line(aes(y = obsValue))
ggplot(filter(filter(df, TAX !%in% "TOTALTAX"), GOV == "FED"), aes(x = obsTime, color = TAX)) + geom_line(aes(y = obsValue))
ggplot(filter(filter(df, TAX %in% -c("TOTALTAX")), GOV == "FED"), aes(x = obsTime, color = TAX)) + geom_line(aes(y = obsValue))
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "FED"), aes(x = obsTime, color = TAX)) + geom_line(aes(y = obsValue))
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "FED"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area()
ggplot(filter(df, TAX %in% "TOTALTAX"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_line() + facet_grid(vars(GOV))
ggplot(filter(filter(df, TAX %in% "TOTALTAX"), GOV == "FED"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_line()
ggplot(filter(filter(df, TAX %in% "TOTALTAX"), GOV == "FED"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_line()
ggplot(filter(filter(df, TAX %in% "TOTALTAX"), GOV == "LOCAL"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_line()
ggplot(filter(filter(df, TAX %in% "TOTALTAX"), GOV == "NES"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_line()
ggplot(filter(filter(df, TAX %in% "TOTALTAX"), GOV == "SOCSEC"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_line()
ggplot(filter(filter(df, TAX %in% "TOTALTAX"), GOV == "STATE"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_line()
ggplot(filter(df, TAX %in% "TOTALTAX"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_line() + facet_grid(vars(GOV))
ggplot(filter(filter(df, TAX %in% "TOTALTAX"), GOV == "FED"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_line()
ggplot(filter(filter(df, TAX %in% "TOTALTAX"), GOV == "LOCAL"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_line()
ggplot(filter(filter(df, TAX %in% "TOTALTAX"), GOV == "NES"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_line()
ggplot(filter(filter(df, TAX %in% "TOTALTAX"), GOV == "SOCSEC"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_line()
ggplot(filter(filter(df, TAX %in% "TOTALTAX"), GOV == "STATE"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_line()
ggplot(filter(df, TAX %in% "TOTALTAX"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line() + facet_grid(vars(GOV))
ggplot(filter(filter(df, TAX %in% "TOTALTAX"), GOV == "FED"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line()
ggplot(filter(filter(df, TAX %in% "TOTALTAX"), GOV == "LOCAL"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line()
ggplot(filter(filter(df, TAX %in% "TOTALTAX"), GOV == "NES"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line()
ggplot(filter(filter(df, TAX %in% "TOTALTAX"), GOV == "SOCSEC"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line()
ggplot(filter(filter(df, TAX %in% "TOTALTAX"), GOV == "STATE"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line()
ggplot(filter(df, !TAX %in% "TOTALTAX"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line() + facet_grid(vars(GOV))
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "FED"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_line()
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "LOCAL"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_line()
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "NES"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_line()
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "SOCSEC"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_line()
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "STATE"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_line()
ggplot(filter(df, !TAX %in% "TOTALTAX"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line() + facet_grid(vars(GOV))
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "FED"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line()
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "LOCAL"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line()
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "NES"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line()
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "SOCSEC"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line()
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "STATE"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line()
ggplot(filter(df, !TAX %in% "TOTALTAX"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area() + facet_grid(vars(GOV))
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "FED"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area()
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "LOCAL"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area()
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "NES"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area()
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "SOCSEC"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area()
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "STATE"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "FED"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area()
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "LOCAL"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area()
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "NES"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area()
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "SOCSEC"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area()
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "STATE"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area
ggplot(filter(df, !TAX %in% "TOTALTAX"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area() + facet_grid(vars(GOV))
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "FED"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area()
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "LOCAL"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area()
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "NES"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area()
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "SOCSEC"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area()
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "STATE"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area()
df %>% head()
df$TAX == "FED"
df <- mutate(df, obsTime = year(as.Date(obsTime, "%Y")))
df <- subset(revusa, select = -c(TIME_FORMAT))
df <- filter(df, TAX %in% c("TOTALTAX", "1000", "2000", "3000", "4000", "5000", "6000"))
df <- mutate(df, obsTime = year(as.Date(obsTime, "%Y")))
df <- mutate(df, obsValue = as.integer(obsValue))
df %>% head()
filter(filter(df, TAX == TOTALTAX), GOV == FED) %>% head()
filter(filter(df, TAX == "TOTALTAX"), GOV == "FED") %>% head()
df_total <- filter(filter(df, TAX == "TOTALTAX"), GOV == "FED") %>% head()
df_total %>% head()
View(df_total)
df_total$prop
View(df_total)
df_total$prop
df_total$prop <- 0
df %>% head()
df_total <- filter(df, TAX == "TOTALTAX") %>% head()
df_total %>% head()
View(df_total)
df_total <- filter(df, TAX == "TOTALTAX") %>% head()
View(df_total)
df %>% head()
df_total <- filter(df, TAX == "TOTALTAX")
View(df_total)
df_total$prop <- 0
df_total %>% spread(TAX, obsValue)
df_total %>% spread(GOV, obsValue)
####
df %>% head()
df_test <- filter(df, GOV %in% c("TOTALTAX", "1000"))
df_test <- filter(filter(df, GOV == "FED"), TAX %in% c("TOTALTAX", "1000"))
df_test %>% head()
View(df_test)
df_test$prop <- 0
df_test %>% spread(GOV, obsValue)
df_test <- filter(filter(df, GOV == "FED"), TAX %in% c("TOTALTAX", "1000"))
View(df_test)
df_test %>% spread(TAX, obsValue)
View(df_test)
View(df_test)
df_test$prop <- 0
df_test$prop <- df$1000/df$TOTALTAX
df_test$prop <- df$"1000"/df$TOTALTAX
mutate(df, prop = "1000"/TOTALTAX)
mutate(df_test, prop = "1000"/TOTALTAX)
View(df_test)
df_test <- spread(df_test, TAX, obsValue)
mutate(df_test, prop = "1000"/TOTALTAX)
colnames(df_test)
colnames(df_test) <- c("GOV", "obsTime", "prop", "COMPANIES", "TOTALTAX")
colnames(df_test)
View(df_test)
mutate(df_test, prop = COMPANIES/TOTALTAX)
view(df)
df1 <- mutate(df2,TAX=recode(TAX, !!!levelKeys)) # !!! represents all the substitutions specified in the vector levelKeys.
levelKeys = c("TOTALTAX" = "Total Tax", "1000" = "Corporate Income Tax", "2000" = "Social Security Tax", "3000"= "Payroll Tax", "4000" = "Property Tax", "5000" = "Taxes on Service and Goods","6000" = "Other Taxes")
df1 <- mutate(df2,TAX=recode(TAX, !!!levelKeys)) # !!! represents all the substitutions specified in the vector levelKeys.
view(df)
df1 <- mutate(df,TAX=recode(TAX, !!!levelKeys)) # !!! represents all the substitutions specified in the vector levelKeys.
view(df1)
df1 <- spread(df1, TAX, obsValue)
view(df1)
ggplot(filter(df, !TAX %in% "TOTALTAX"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area() + facet_grid(vars(GOV))
df1 <- mutate(df,TAX=recode(TAX, !!!levelKeys)) # !!! represents all the substitutions specified in the vector levelKeys.
view(df1)
view(df1)
view(df1)
spread(df1, TAX, obsValue)
filter(df1, TAX == "Total Tax")
filter(df1, TAX == "Total Tax")$obsValue
spread(df1, TAX, obsValue)
spread(df1, TAX, obsValue/filter(df1, TAX == "Total Tax")$obsValue)
spread(df1, TAX, obsValue)
filter(df1, TAX == "Total Tax")$obsValue
spread(df1, TAX, obsValue)
spread(df1, TAX, obsValue) %>% head()
spread(df1, TAX, obsValue/filter(df1, TAX == "Total Tax")$obsValue) %>% head()
view(df1)
df1$prop <- 0
view(df1)
df1$prop <- filter(df1, TAX == "Total Tax")$obsValue
mutate(df1, prop = filter(df1, TAX == "Total Tax")$obsValue)
view(df1)
df1 <- df
view(df1)
df1 <- spread(df1, TAX, obsValue)
view(df1)
df1$1000_prop <- df1$1000_prop/df1$TOTALTAX
df1$"1000_prop" <- df1$"1000_prop"/df1$TOTALTAX
df1$"1000_prop" <- 0
df1$"1000_prop" <- df1$"1000"/df1$TOTALTAX
view(df1)
df1$'6000_prop' <- df1$"6000"/df1$TOTALTAX
view(df1)
df1$"1000_prop" <- df1$"1000"/df1$TOTALTAX
df1$"2000_prop" <- df1$"1000"/df1$TOTALTAX
df1$"3000_prop" <- df1$"1000"/df1$TOTALTAX
df1$"4000_prop" <- df1$"1000"/df1$TOTALTAX
df1$"5000_prop" <- df1$"1000"/df1$TOTALTAX
df1$'6000_prop' <- df1$"6000"/df1$TOTALTAX
view(df1)
df1$"1000_prop" <- df1$"1000"/df1$TOTALTAX
df1$"2000_prop" <- df1$"2000"/df1$TOTALTAX
df1$"3000_prop" <- df1$"3000"/df1$TOTALTAX
df1$"4000_prop" <- df1$"4000"/df1$TOTALTAX
df1$"5000_prop" <- df1$"5000"/df1$TOTALTAX
df1$'6000_prop' <- df1$"6000"/df1$TOTALTAX
df1 <- df
df1 <- spread(df1, TAX, obsValue)
df1$"1000_prop" <- df1$"1000"/df1$TOTALTAX
df1$"2000_prop" <- df1$"2000"/df1$TOTALTAX
df1$"3000_prop" <- df1$"3000"/df1$TOTALTAX
df1$"4000_prop" <- df1$"4000"/df1$TOTALTAX
df1$"5000_prop" <- df1$"5000"/df1$TOTALTAX
df1$'6000_prop' <- df1$"6000"/df1$TOTALTAX
view(df1)
select(df1, contains("prop"))
select(df1, GOV, obsTime, contains("prop"))
select(df1, GOV, obsTime, contains("prop")) %>% head()
select(df1, GOV, obsTime, contains("prop")) %>% gather(key = "prop", value = "perc", "1000_prop","2000_prop","3000_prop","4000_prop","5000_prop","6000_prop")
view(df1)
select(df1, GOV, obsTime, contains("prop"))
select(df1, GOV, obsTime, contains("prop")) %>% gather(key = "prop", value = "1000_prop","2000_prop","3000_prop","4000_prop","5000_prop","6000_prop")
select(df1, GOV, obsTime, contains("prop"))
df1 <- df
df1$"1000_prop" <- df1$"1000"/df1$TOTALTAX
df1 <- df
df1 <- spread(df1, TAX, obsValue)
view(df1)
df1 %>% head()
gather(df1, key = "propValue", value = TOTALATAX, 1000, 2000, 3000, 4000, 5000, 6000)
gather(df1, key = "propValue", value = TOTALATAX, "1000", "2000", "3000", "4000", "5000", "6000")
gather(df1, key = "propValue", value = TOTALATAX, "1000", "2000", "3000", "4000", "5000", "6000") %>% head()
gather(df1, key = "propValue", value = "prop", "1000"/TOTALTAX, "2000", "3000", "4000", "5000", "6000") %>% head()
gather(df1, key = "propValue", value = "prop", "1000"/"TOTALTAX", "2000", "3000", "4000", "5000", "6000") %>% head()
gather(df1, key = "propValue", value = "prop", "1000"/TOTALTAX, "2000", "3000", "4000", "5000", "6000") %>% head()
df1 %>% head()
gather(df1, key = "propValue", value = "prop", df1$"1000"/df1$TOTALTAX, "2000", "3000", "4000", "5000", "6000") %>% head()
gather(df1, key = "propValue", value = "prop", "1000"/TOTALTAX, "2000", "3000", "4000", "5000", "6000") %>% head()
gather(df1, key = "propValue", value = "prop", "1000", "2000", "3000", "4000", "5000", "6000") %>% head()
df2 <- gather(df1, key = "propValue", value = "prop", "1000", "2000", "3000", "4000", "5000", "6000")
view(df2)
df2 <- gather(df1, key = "propValue", value = "prop", "1000", "2000", "3000", "4000", "5000", "6000", -TOTALTAX)
view(df2)
view(df1)
df1 <- df
df1 <- spread(df1, TAX, obsValue)
df2 <- gather(df1, key = "propValue", value = "prop", "1000", "2000", "3000", "4000", "5000", "6000")
view(df2)
df1 <- df
df1 %>% spread(TAX, obsValue) %>% gather(key = "propValue", value = "prop", "1000", "2000", "3000", "4000", "5000", "6000"), mutate(prop = prop/TOTALTAX)
df1 %>% spread(TAX, obsValue)
df1 %>% spread(TAX, obsValue) %>% gather(key = "propValue", value = "prop", "1000", "2000", "3000", "4000", "5000", "6000") %>% mutate(prop = prop/TOTALTAX)
df1 %>% spread(TAX, obsValue) %>% gather(key = "propValue", value = "prop", "1000", "2000", "3000", "4000", "5000", "6000") %>% mutate(prop = (prop/TOTALTAX)*100)
df1 %>% spread(TAX, obsValue) %>% gather(key = "propValue", value = "prop", "1000", "2000", "3000", "4000", "5000", "6000") %>% mutate(prop = (prop/TOTALTAX)*100)
df1 %>% spread(TAX, obsValue) %>% gather(key = "propValue", value = "prop", "1000", "2000", "3000", "4000", "5000", "6000") %>% mutate(prop = (prop/TOTALTAX)*100) %>% head()
levelKeys = c("TOTALTAX" = "Total Tax", "1000" = "Corporate Income Tax", "2000" = "Social Security Tax", "3000"= "Payroll Tax", "4000" = "Property Tax", "5000" = "Taxes on Service and Goods","6000" = "Other Taxes")
df1 <- mutate(df,TAX=recode(TAX, !!!levelKeys)) # !!! represents all the substitutions specified in the vector levelKeys.
df1
df1 %>% spread(TAX, obsValue) %>% gather(key = "TAX", value = "propValue", "Corporate Income Tax", "Social Security Tax", "Payroll Tax", "Property Tax", "Taxes on Service and Goods", "Other Taxes") %>% mutate(prop = (prop/TOTALTAX)*100)
df1 %>% spread(TAX, obsValue) %>% gather(key = "TAX", value = "propValue", "Corporate Income Tax", "Social Security Tax", "Payroll Tax", "Property Tax", "Taxes on Service and Goods", "Other Taxes") %>% mutate(prop = (propValue/TOTALTAX)*100)
df1
df1 %>% spread(TAX, obsValue)
df1 %>% spread(TAX, obsValue) %>% head()
df1 %>% spread(TAX, obsValue) %>% %>% gather(key = "TAX", value = "propValue", "Corporate Income Tax", "Social Security Tax", "Payroll Tax", "Property Tax", "Taxes on Service and Goods", "Other Taxes") %>% head()
df1 %>% spread(TAX, obsValue) %>% gather(key = "TAX", value = "propValue", "Corporate Income Tax", "Social Security Tax", "Payroll Tax", "Property Tax", "Taxes on Service and Goods", "Other Taxes") %>% head()
df1 %>% spread(TAX, obsValue) %>% gather(key = "TAX", value = "propValue", "Corporate Income Tax", "Social Security Tax", "Payroll Tax", "Property Tax", "Taxes on Service and Goods", "Other Taxes") %>% mutate(prop = (propValue/"Total Tax")*100) %>% head()
levelKeys = c("TOTALTAX" = "Total Tax", "1000" = "Corporate Income Tax", "2000" = "Social Security Tax", "3000"= "Payroll Tax", "4000" = "Property Tax", "5000" = "Taxes on Service and Goods","6000" = "Other Taxes")
levelKeys = c("1000" = "Corporate Income Tax", "2000" = "Social Security Tax", "3000"= "Payroll Tax", "4000" = "Property Tax", "5000" = "Taxes on Service and Goods","6000" = "Other Taxes")
df1 <- mutate(df,TAX=recode(TAX, !!!levelKeys)) # !!! represents all the substitutions specified in the vector levelKeys.
df1 %>% spread(TAX, obsValue) %>% gather(key = "TAX", value = "propValue", "Corporate Income Tax", "Social Security Tax", "Payroll Tax", "Property Tax", "Taxes on Service and Goods", "Other Taxes") %>% %>% mutate(prop = (propValue/TOTALTAX)*100) %>% head()
levelKeys = c("1000" = "Corporate Income Tax", "2000" = "Social Security Tax", "3000"= "Payroll Tax", "4000" = "Property Tax", "5000" = "Taxes on Service and Goods","6000" = "Other Taxes")
df1 <- mutate(df,TAX=recode(TAX, !!!levelKeys)) # !!! represents all the substitutions specified in the vector levelKeys.
df1
df1 %>% spread(TAX, obsValue) %>% head()
df1 %>% spread(TAX, obsValue) %>% gather(key = "TAX", value = "propValue", "Corporate Income Tax", "Social Security Tax", "Payroll Tax", "Property Tax", "Taxes on Service and Goods", "Other Taxes") %>% head()
df1 %>% spread(TAX, obsValue) %>% gather(key = "TAX", value = "propValue", "Corporate Income Tax", "Social Security Tax", "Payroll Tax", "Property Tax", "Taxes on Service and Goods", "Other Taxes") %>% mutate(prop = (propValue/TOTALTAX)*100) %>% head()
#4: proportional stack plot of the data
levelKeys = c("1000" = "Corporate Income Tax", "2000" = "Social Security Tax", "3000"= "Payroll Tax", "4000" = "Property Tax", "5000" = "Taxes on Service and Goods","6000" = "Other Taxes")
df <- mutate(df,TAX=recode(TAX, !!!levelKeys))
df <- df %>% spread(TAX, obsValue) %>% gather(key = "TAX", value = "propValue", "Corporate Income Tax", "Social Security Tax", "Payroll Tax", "Property Tax", "Taxes on Service and Goods", "Other Taxes") %>% mutate(prop = (propValue/TOTALTAX)*100)
df
revusa <- get_dataset("REVUSA")
revusa <- data.frame(revusa)
df <- subset(revusa, select = -c(TIME_FORMAT))
df <- filter(df, TAX %in% c("TOTALTAX", "1000", "2000", "3000", "4000", "5000", "6000"))
df <- mutate(df, obsTime = year(as.Date(obsTime, "%Y")))
df <- mutate(df, obsValue = as.integer(obsValue))
df %>% spread(TAX, obsValue) %>% gather(key = "TAX", value = "propValue", "Corporate Income Tax", "Social Security Tax", "Payroll Tax", "Property Tax", "Taxes on Service and Goods", "Other Taxes") %>% mutate(prop = (propValue/TOTALTAX)*100)
#4: proportional stack plot of the data
levelKeys = c("1000" = "Corporate Income Tax", "2000" = "Social Security Tax", "3000"= "Payroll Tax", "4000" = "Property Tax", "5000" = "Taxes on Service and Goods","6000" = "Other Taxes")
df %>% spread(TAX, obsValue) %>% gather(key = "TAX", value = "propValue", "Corporate Income Tax", "Social Security Tax", "Payroll Tax", "Property Tax", "Taxes on Service and Goods", "Other Taxes") %>% mutate(prop = (propValue/TOTALTAX)*100)
df
#4: proportional stack plot of the data
levelKeys = c("1000" = "Corporate Income Tax", "2000" = "Social Security Tax", "3000"= "Payroll Tax", "4000" = "Property Tax", "5000" = "Taxes on Service and Goods","6000" = "Other Taxes")
df <- mutate(df,TAX=recode(TAX, !!!levelKeys))
df %>% spread(TAX, obsValue) %>% gather(key = "TAX", value = "propValue", "Corporate Income Tax", "Social Security Tax", "Payroll Tax", "Property Tax", "Taxes on Service and Goods", "Other Taxes") %>% mutate(prop = (propValue/TOTALTAX)*100)
df %>% spread(TAX, obsValue) %>% gather(key = "TAX", value = "propValue", "Corporate Income Tax", "Social Security Tax", "Payroll Tax", "Property Tax", "Taxes on Service and Goods", "Other Taxes") %>% mutate(propValue = (propValue/TOTALTAX)*100)
df %>% spread(TAX, obsValue) %>% gather(key = "TAX", value = "propValue", "Corporate Income Tax", "Social Security Tax", "Payroll Tax", "Property Tax", "Taxes on Service and Goods", "Other Taxes")
df %>% spread(TAX, obsValue) %>% gather(key = "TAX", value = "propValue", "Corporate Income Tax", "Social Security Tax", "Payroll Tax", "Property Tax", "Taxes on Service and Goods", "Other Taxes") %>% mutate(propValue = (propValue/TOTALTAX)*100)
df %>% spread(TAX, obsValue) %>% gather(key = "TAX", value = "propValue", "Corporate Income Tax", "Social Security Tax", "Payroll Tax", "Property Tax", "Taxes on Service and Goods", "Other Taxes") %>% mutate(propValue = (propValue/TOTALTAX)*100) %>% head()
df <- subset(revusa, select = -c(TIME_FORMAT))
df <- filter(df, TAX %in% c("TOTALTAX", "1000", "2000", "3000", "4000", "5000", "6000"))
df <- mutate(df, obsTime = year(as.Date(obsTime, "%Y")))
df <- mutate(df, obsValue = as.integer(obsValue))
#4: proportional stack plot of the data
levelKeys = c("1000" = "Corporate Income Tax", "2000" = "Social Security Tax", "3000"= "Payroll Tax", "4000" = "Property Tax", "5000" = "Taxes on Service and Goods","6000" = "Other Taxes")
df <- mutate(df,TAX=recode(TAX, !!!levelKeys))
df <- df %>% spread(TAX, obsValue) %>% gather(key = "TAX", value = "propValue", "Corporate Income Tax", "Social Security Tax", "Payroll Tax", "Property Tax", "Taxes on Service and Goods", "Other Taxes") %>% mutate(propValue = (propValue/TOTALTAX)*100)
df
view(df)
ggplot(df, aes(x = obsTime, y = propValue, fill = TAX)) + geom_area() + facet_grid(vars(GOV))
ggplot(df, GOV == "FED"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area()
ggplot(filter(df, GOV == "FED"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area()
ggplot(df, aes(x = obsTime, y = propValue, fill = TAX)) + geom_area() + facet_grid(vars(GOV))
ggplot(filter(df, GOV == "FED"), aes(x = obsTime, y = propValue, fill = TAX)) + geom_area()
ggplot(filter(df, GOV == "LOCAL"), aes(x = obsTime, y = propValue, fill = TAX)) + geom_area()
ggplot(filter(df, GOV == "NES"), aes(x = obsTime, y = propValue, fill = TAX)) + geom_area()
ggplot(filter(df, GOV == "SOCSEC"), aes(x = obsTime, y = propValue, fill = TAX)) + geom_area()
ggplot(filter(df, GOV == "STATE"), aes(x = obsTime, y = propValue, fill = TAX)) + geom_area()
df <- subset(revusa, select = -c(TIME_FORMAT))
df <- filter(df, TAX %in% c("TOTALTAX", "1000", "2000", "3000", "4000", "5000", "6000"))
df <- mutate(df, obsTime = year(as.Date(obsTime, "%Y")))
df <- mutate(df, obsValue = as.integer(obsValue))
levelKeys = c("1000" = "Corporate Income Tax", "2000" = "Social Security Tax", "3000"= "Payroll Tax", "4000" = "Property Tax", "5000" = "Taxes on Service and Goods","6000" = "Other Taxes")
df <- mutate(df,TAX=recode(TAX, !!!levelKeys))
#1
ggplot(filter(df, TAX %in% "TOTALTAX"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line() + facet_grid(vars(GOV))
ggplot(filter(filter(df, TAX %in% "TOTALTAX"), GOV == "FED"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line()
ggplot(filter(filter(df, TAX %in% "TOTALTAX"), GOV == "LOCAL"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line()
ggplot(filter(filter(df, TAX %in% "TOTALTAX"), GOV == "NES"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line()
ggplot(filter(filter(df, TAX %in% "TOTALTAX"), GOV == "SOCSEC"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line()
ggplot(filter(filter(df, TAX %in% "TOTALTAX"), GOV == "STATE"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line()
#2: create multi-line plots (multi-line)
ggplot(filter(df, !TAX %in% "TOTALTAX"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line() + facet_grid(vars(GOV))
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "FED"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line()
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "LOCAL"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line()
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "NES"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line()
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "SOCSEC"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line()
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "STATE"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line()
#3: stacked area plot
ggplot(filter(df, !TAX %in% "TOTALTAX"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area() + facet_grid(vars(GOV))
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "FED"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area()
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "LOCAL"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area()
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "NES"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area()
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "SOCSEC"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area()
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "STATE"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area()
#4: proportional stack plot of the data
df <- df %>% spread(TAX, obsValue) %>% gather(key = "TAX", value = "propValue", "Corporate Income Tax", "Social Security Tax", "Payroll Tax", "Property Tax", "Taxes on Service and Goods", "Other Taxes") %>% mutate(propValue = (propValue/TOTALTAX)*100)
ggplot(df, aes(x = obsTime, y = propValue, fill = TAX)) + geom_area() + facet_grid(vars(GOV))
ggplot(filter(df, GOV == "FED"), aes(x = obsTime, y = propValue, fill = TAX)) + geom_area()
ggplot(filter(df, GOV == "LOCAL"), aes(x = obsTime, y = propValue, fill = TAX)) + geom_area()
ggplot(filter(df, GOV == "NES"), aes(x = obsTime, y = propValue, fill = TAX)) + geom_area()
ggplot(filter(df, GOV == "SOCSEC"), aes(x = obsTime, y = propValue, fill = TAX)) + geom_area()
ggplot(filter(df, GOV == "STATE"), aes(x = obsTime, y = propValue, fill = TAX)) + geom_area()
ggplot(filter(df, GOV == "STATE"), aes(x = obsTime, y = propValue, fill = TAX)) + geom_area()
filter(df, GOV == "STATE")
filter(df, GOV == "STATE") %>% filter(TAX == "Property Tax")
#install.packages("tidyverse")
#install.packages("OECD")
#install.packages("lubridate")
library(tidyverse)
library(OECD)
library(lubridate)
revusa <- get_dataset("REVUSA")
revusa <- data.frame(revusa)
df <- subset(revusa, select = -c(TIME_FORMAT))
df <- filter(df, TAX %in% c("TOTALTAX", "1000", "2000", "3000", "4000", "5000", "6000"))
df <- mutate(df, obsTime = year(as.Date(obsTime, "%Y")))
df <- mutate(df, obsValue = as.integer(obsValue))
levelKeys = c("1000" = "Corporate Income Tax", "2000" = "Social Security Tax", "3000"= "Payroll Tax", "4000" = "Property Tax", "5000" = "Taxes on Service and Goods","6000" = "Other Taxes")
df <- mutate(df,TAX=recode(TAX, !!!levelKeys))
#1
ggplot(filter(df, TAX %in% "TOTALTAX"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line() + facet_grid(vars(GOV)) + labs(title = "US Tax Revenue - Grid")
ggplot(filter(filter(df, TAX %in% "TOTALTAX"), GOV == "FED"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line() + labs(title = "US Tax Revenue - FED")
ggplot(filter(filter(df, TAX %in% "TOTALTAX"), GOV == "LOCAL"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line() + labs(title = "US Tax Revenue - LOCAL")
ggplot(filter(filter(df, TAX %in% "TOTALTAX"), GOV == "NES"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line() + labs(title = "US Tax Revenue - NES")
ggplot(filter(filter(df, TAX %in% "TOTALTAX"), GOV == "SOCSEC"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line() + labs(title = "US Tax Revenue - SOCSEC")
ggplot(filter(filter(df, TAX %in% "TOTALTAX"), GOV == "STATE"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line() + labs(title = "US Tax Revenue - STATE")
#2: create multi-line plots (multi-line)
ggplot(filter(df, !TAX %in% "TOTALTAX"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line() + facet_grid(vars(GOV)) + labs(title = "US Tax Revenue - Grid")
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "FED"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line() + labs(title = "US Tax Revenue - FED")
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "LOCAL"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line() + labs(title = "US Tax Revenue - LOCAL")
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "NES"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line() + labs(title = "US Tax Revenue - NES")
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "SOCSEC"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line() + labs(title = "US Tax Revenue - SOCSEC")
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "STATE"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line() + labs(title = "US Tax Revenue - STATE")
#3: stacked area plot
ggplot(filter(df, !TAX %in% "TOTALTAX"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area() + facet_grid(vars(GOV)) + labs(title = "US Tax Revenue - Grid")
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "FED"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area() + labs(title = "US Tax Revenue - FED")
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "LOCAL"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area() + labs(title = "US Tax Revenue - LOCAL")
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "NES"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area() + labs(title = "US Tax Revenue - NES")
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "SOCSEC"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area() + labs(title = "US Tax Revenue - SOCSEC")
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "STATE"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area() + labs(title = "US Tax Revenue - STATE")
#4: proportional stack plot of the data
df_prop <- df %>% spread(TAX, obsValue) %>% gather(key = "TAX", value = "propValue", "Corporate Income Tax", "Social Security Tax", "Payroll Tax", "Property Tax", "Taxes on Service and Goods", "Other Taxes") %>% mutate(propValue = (propValue/TOTALTAX)*100)
ggplot(df_prop, aes(x = obsTime, y = propValue, fill = TAX)) + geom_area() + facet_grid(vars(GOV)) + labs(title = "US Tax Revenue - Grid")
ggplot(filter(df_prop, GOV == "FED"), aes(x = obsTime, y = propValue, fill = TAX)) + geom_area() + labs(title = "US Tax Revenue - FED")
ggplot(filter(df_prop, GOV == "LOCAL"), aes(x = obsTime, y = propValue, fill = TAX)) + geom_area() + labs(title = "US Tax Revenue - LOCAL")
ggplot(filter(df_prop, GOV == "NES"), aes(x = obsTime, y = propValue, fill = TAX)) + geom_area() + labs(title = "US Tax Revenue - NES")
ggplot(filter(df_prop, GOV == "SOCSEC"), aes(x = obsTime, y = propValue, fill = TAX)) + geom_area() + labs(title = "US Tax Revenue - SOCSEC")
ggplot(filter(df_prop, GOV == "STATE"), aes(x = obsTime, y = propValue, fill = TAX)) + geom_area() + labs(title = "US Tax Revenue - STATE")
#install.packages("tidyverse")
#install.packages("OECD")
#install.packages("lubridate")
library(tidyverse)
library(OECD)
library(lubridate)
revusa <- get_dataset("REVUSA")
revusa <- data.frame(revusa)
df <- subset(revusa, select = -c(TIME_FORMAT))
df <- filter(df, TAX %in% c("TOTALTAX", "1000", "2000", "3000", "4000", "5000", "6000"))
df <- mutate(df, obsTime = year(as.Date(obsTime, "%Y")))
df <- mutate(df, obsValue = as.integer(obsValue))
levelKeys = c("1000" = "Corporate Income Tax", "2000" = "Social Security Tax", "3000"= "Payroll Tax", "4000" = "Property Tax", "5000" = "Taxes on Service and Goods","6000" = "Other Taxes")
df <- mutate(df,TAX=recode(TAX, !!!levelKeys))
#1
ggplot(filter(df, TAX %in% "TOTALTAX"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line() + facet_grid(vars(GOV)) + labs(title = "US Tax Revenue - Grid")
ggplot(filter(filter(df, TAX %in% "TOTALTAX"), GOV == "FED"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line() + labs(title = "US Tax Revenue - FED")
ggplot(filter(filter(df, TAX %in% "TOTALTAX"), GOV == "LOCAL"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line() + labs(title = "US Tax Revenue - LOCAL")
ggplot(filter(filter(df, TAX %in% "TOTALTAX"), GOV == "NES"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line() + labs(title = "US Tax Revenue - NES")
ggplot(filter(filter(df, TAX %in% "TOTALTAX"), GOV == "SOCSEC"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line() + labs(title = "US Tax Revenue - SOCSEC")
ggplot(filter(filter(df, TAX %in% "TOTALTAX"), GOV == "STATE"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line() + labs(title = "US Tax Revenue - STATE")
#2: create multi-line plots (multi-line)
ggplot(filter(df, !TAX %in% "TOTALTAX"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line() + facet_grid(vars(GOV)) + labs(title = "US Tax Revenue - Grid")
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "FED"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line() + labs(title = "US Tax Revenue - FED")
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "LOCAL"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line() + labs(title = "US Tax Revenue - LOCAL")
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "NES"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line() + labs(title = "US Tax Revenue - NES")
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "SOCSEC"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line() + labs(title = "US Tax Revenue - SOCSEC")
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "STATE"), aes(x = obsTime, y = obsValue, color = TAX)) + geom_line() + labs(title = "US Tax Revenue - STATE")
#3: stacked area plot
ggplot(filter(df, !TAX %in% "TOTALTAX"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area() + facet_grid(vars(GOV)) + labs(title = "US Tax Revenue - Grid")
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "FED"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area() + labs(title = "US Tax Revenue - FED")
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "LOCAL"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area() + labs(title = "US Tax Revenue - LOCAL")
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "NES"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area() + labs(title = "US Tax Revenue - NES")
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "SOCSEC"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area() + labs(title = "US Tax Revenue - SOCSEC")
ggplot(filter(filter(df, !TAX %in% "TOTALTAX"), GOV == "STATE"), aes(x = obsTime, y = obsValue, fill = TAX)) + geom_area() + labs(title = "US Tax Revenue - STATE")
#4: proportional stack plot of the data
df_prop <- df %>% spread(TAX, obsValue) %>% gather(key = "TAX", value = "propValue", "Corporate Income Tax", "Social Security Tax", "Payroll Tax", "Property Tax", "Taxes on Service and Goods", "Other Taxes") %>% mutate(propValue = (propValue/TOTALTAX)*100)
ggplot(df_prop, aes(x = obsTime, y = propValue, fill = TAX)) + geom_area() + facet_grid(vars(GOV)) + labs(title = "US Tax Revenue - Grid")
ggplot(filter(df_prop, GOV == "FED"), aes(x = obsTime, y = propValue, fill = TAX)) + geom_area() + labs(title = "US Tax Revenue - FED")
ggplot(filter(df_prop, GOV == "LOCAL"), aes(x = obsTime, y = propValue, fill = TAX)) + geom_area() + labs(title = "US Tax Revenue - LOCAL")
ggplot(filter(df_prop, GOV == "NES"), aes(x = obsTime, y = propValue, fill = TAX)) + geom_area() + labs(title = "US Tax Revenue - NES")
ggplot(filter(df_prop, GOV == "SOCSEC"), aes(x = obsTime, y = propValue, fill = TAX)) + geom_area() + labs(title = "US Tax Revenue - SOCSEC")
ggplot(filter(df_prop, GOV == "STATE"), aes(x = obsTime, y = propValue, fill = TAX)) + geom_area() + labs(title = "US Tax Revenue - STATE")
